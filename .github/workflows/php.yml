name: PHP Composer

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

#     - name: Validate composer.json and composer.lock
#       run: composer validate --strict

#     - name: Cache Composer packages
#       id: composer-cache
#       uses: actions/cache@v3
#       with:
#         path: vendor
#         key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#         restore-keys: |
#           ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    # Add a test script to composer.json, for instance:  "test": "vendor/bin/phpunit"

    - name: Run test suite
      run: ./vendor/bin/phpunit tests/UserTest.php
      
    - name: Install SSH key
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    
  Deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2 
      - name: Build & Deploy
        env:
            PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            HOSTNAME: 174.129.59.126
            USER_NAME: ec2-user
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '

              # Now we have got the access of EC2 and we will start the deploy .
              mkdir myfolder
#     - name: Run php file
#       run: sudo systemctl start apache2
